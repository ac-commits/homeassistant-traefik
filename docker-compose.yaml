services:
  #Alternative certbot
  # treafik
  reverse-proxy:
    image: traefik:v3.3
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml:ro # Traefik config file
      - traefik-certs:/certs # Docker volume to store the acme file for the Certifactes

  # HomeAssistant
  homeassistant:
    container_name: ha
    image: "ghcr.io/home-assistant/home-assistant:stable"
    privileged: true
    devices:
      - /dev/hci0:/dev/hci0
    volumes:
      - ${HA_CONFIG}:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus
    restart: unless-stopped
    depends_on:
      # MariaDB is optional (only if you would like to use a different database for HA).
      - mariadb
    user: "${LOCAL_USER}:${LOCAL_USER}"
    ports:
      - "8123:8123"  # "8321:8123" Maps external port 8123 to internal port 8123
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homeassistant-http.rule=Host(`example.nl`) || Host(`www.example.nl`)"
      - "traefik.http.routers.homeassistant-http.entrypoints=homeassistant"
      - "traefik.http.routers.homeassistant-http.middlewares=redirect-to-https"
      - "traefik.http.routers.homeassistant-https.rule=Host(`example.nl`) || Host(`example.nl`)"
      - "traefik.http.routers.app-https.entrypoints=homeassistant"
      - "traefik.http.routers.homeassistant-https.tls=true"
      - "traefik.http.routers.homeassistant-https.tls.certresolver=letencrypt"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    restart: unless-stopped
    volumes:
      - ${Z2MQTT_DATA}:/app/data
      - /run/udev:/run/udev:ro
    ports:
    # Frontend port
      - 8081:8080
    environment:
      - TZ=${TZ}
    devices:
    # Make sure this matched your adapter location
      - ${ZIGBEE_DONGLE}:/dev/ttyACM0
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    volumes:
      - ${MOSQUITTO}:/mosquitto
      - ${MOSQUITTO_DATA}:/mosquitto/data
      - ${MOSQUITTO_LOG}:/mosquitto/log
    ports:
      - 1883:1883
      - 9001:9001
    user: "${LOCAL_USER}:${LOCAL_USER}"
  # MariaDb
  mariadb:
    image: mariadb:latest
    container_name: ha_mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: ha_db
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${HA_MYSQL_PASSWORD}"
    user: "${LOCAL_USER}:${LOCAL_USER}"
    volumes:
      # Local path where the database will be stored.
      - ${HA_DB}:/var/lib/mysql
    ports:
      - "3306:3306"

  # immich
  immich-all:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
      # extends:
      #   file: hwaccel.transcoding.yml
      #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/data
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - '2283:2283'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich-http.rule=Host(`example.nl`) || Host(`www.example.nl`)"
      - "traefik.http.routers.immich-http.entrypoints=fautau"
      - "traefik.http.routers.immich-http.middlewares=redirect-to-https"
      - "traefik.http.routers.immich-https.rule=Host(`example.nl`) || Host(`example.nl`)"
      - "traefik.http.routers.app-https.entrypoints=fautau"
      - "traefik.http.routers.immich-https.tls=true"
      - "traefik.http.routers.immich-https.tls.certresolver=letencrypt"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
    - model-cache:/cache
    env_file:
    - .env
    restart: always
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:a137a2b60aca1a75130022d6bb96af423fefae4eb55faf395732db3544803280
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    container_name: immich_postgres
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:32324a2f41df5de9efe1af166b7008c3f55646f8d0e00d9550c16c9822366b4a
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      # Uncomment the DB_STORAGE_TYPE: 'HDD' var if your database isn't stored on SSDs
      # DB_STORAGE_TYPE: 'HDD'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    shm_size: 128mb
    restart: always

#mealie
  mealie:
    image: ghcr.io/mealie-recipes/mealie:latest
    container_name: mealie
    restart: always
    ports:
        - "9925:9000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mealie-http.rule=Host(`example.nl`) || Host(`www.example.nl`)"
      - "traefik.http.routers.mealie-http.entrypoints=mealish"
      - "traefik.http.routers.mealie-http.middlewares=redirect-to-https"
      - "traefik.http.routers.mealie-https.rule=Host(`example.nl`) || Host(`example.nl`)"
      - "traefik.http.routers.app-https.entrypoints=mealish"
      - "traefik.http.routers.mealie-https.tls=true"
      - "traefik.http.routers.mealie-https.tls.certresolver=letencrypt"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
#    deploy:
        #resources:
        #limits:
        #  memory: 1000M #memory limit not supported for this kernel
    volumes:
      - mealie-data:/app/data/
    environment:
      ALLOW_SIGNUP: ${ALLOW_SIGNUP}
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      BASE_URL: ${BASE_URL}
      # Database Settings
      DB_ENGINE: ${DB_ENGINE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
    depends_on:
      mealie_db:
        condition: service_healthy
        restart: true

  mealie_db:
    container_name: mealie_postgres
    network_mode: "host"
    image: postgres:17
    restart: always
    volumes:
      - mealie-pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      PGUSER: ${PGUSER}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  mealie-data:
  mealie-pgdata:
  model-cache:
  traefik-certs:
    name: traefik-certs
